@import "../abstract/variables";
@import "../abstract/mixins";
.section-about {
    margin: 0 0.4rem;
    background-color: $color-gray-light-1 !important;
    // background-color: yellow !important;
    padding: 25rem 0; // its y and z axis
    margin-top: -24vh !important; // to cover the headers clip-path remaining space
    @include respond(tab-port) {
        padding: 24rem 0;
    }
}

.centered-text {
    text-align: center;
}

.heading-secondary {
    font-size: 3rem;
    text-transform: uppercase;
    font-weight: 700;
    display: inline-block; // it will specify its own padding and height -- instead of taking whole space
    background-image: linear-gradient( to right, $color-primary-light, $color-primary-dark); // to have image is not necessary
    -webkit-background-clip: text; // it will make background only for text
    color: transparent; // color is needed to be transparent -- if webkit background clip is to work
    letter-spacing: 0.2rem;
    transition: all 0.4s;
    @include respond(tab-port) {
        font-size: 2.5rem;
    }
    @include respond(phone) {
        font-size: 2rem;
        width: 80%;
    }
    &:hover {
        transform: skewY(2deg) skewX(15deg) scale(1.1); // new property -- skew // scale means to enlarge
        text-shadow: 0.5rem 1rem 2rem rgba($color-black, 0.2);
    }
}

.heading-tertiary {
    font-size: $default-font-size;
    font-weight: 700;
    text-transform: uppercase;
}

.paragraph {
    font-size: $default-font-size;
    &:not(:last-child) {
        margin-bottom: 3rem;
    }
}

.btn-text {
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    font-size: $default-font-size;
    font-weight: 400;
    transition: all 0.4s;
    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
        transform: translateY(-0.2rem);
        border-radius: 10rem;
        padding: 0.2rem 1rem;
    }
    &:active {
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
        transform: translateY(0);
    }
}

//                                  Image Composition Starts
.composition {
    position: relative;
    margin-top: 8rem;
    @include respond(tab-port) {
        margin-top: 1rem;
        // margin-bottom: 1rem !important;
    }
    &__photo {
        outline-offset: 1rem;
        // it is very important property that we can't do with borders
        // to have a space btw photo and border
        width: 60%; // every photo will have 60% of its own grid width
        // box-shadow: 0 2rem 4rem rgba($color-black, 0.4);
        box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
        border-radius: 0.2rem;
        z-index: 10;
        transition: all 0.4s;
        position: absolute;
        // its reference position relative is -- .composition -- so it can move around composition
        @include respond(tab-port) {
            float: left;
            position: relative;
            // to remove position absolute .. which is based on whole composition's position relative
            // so we can use top left here // but not according to something like composition
            width: 33.33333333%;
            box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
        }
        &--p1 {
            left: 0; // it will start on left most
            top: -2rem; // thora oopr
            @include respond(tab-port) {
                top: -1rem; // on the top 0 of its 33%
                transform: scale(1.2);
            }
        }
        &--p2 {
            right: 0; // so it will start on right most
            top: 2rem;
            @include respond(tab-port) {
                top: 0; // on the top 0 of its 33%
                left: 0; // on the left 0 of its 33%
                transform: scale(1.3);
                z-index: 100;
            }
        }
        &--p3 {
            left: 20%;
            top: 8rem;
            @include respond(tab-port) {
                top: 1rem; // on the top 0 of its 33%
                left: 0; // on the left 0 of its 33%
                transform: scale(1.2);
            }
        }
        &:hover {
            outline: 1rem solid $color-primary;
            transform: scale(1.05) translateY(-0.5rem);
            box-shadow: 0 2.5rem 4rem rgba($color-black, 0.4);
            z-index: 20;
        }
    }
    &:hover &__photo:not(:hover) {
        //on hover of whole composition --- every photo which are not hovered -- will become smaller
        transform: scale(0.95);
    }
}

//                                  Image Composition Ends